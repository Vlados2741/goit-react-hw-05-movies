{"version":3,"file":"static/js/31.f3d216f4.chunk.js","mappings":"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","sources":["components/Error.js","components/api.js","components/header.js","components/trends.js","components/search.js","pages/movies.js"],"sourcesContent":["export const Error = () => {\n  return <h3>Error</h3>;\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY_API = '79f5f6d0598b4877015b692900b7580b';\n\nexport const fetchTrends = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/all/day?api_key=${KEY_API}&language=en`\n  );\n  return response.data;\n};\n\nexport const fetchFilm = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${KEY_API}&language=en`\n  );\n  return response.data;\n};\n\nexport const fetchFilmByName = async searchName => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY_API}&language=en&page=1&include_adult=false&query=${searchName}`\n  );\n  return response.data;\n};\n\nexport const fetchActors = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${KEY_API}&language=en`\n  );\n  return response.data;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${KEY_API}&language=en&page=1`\n  );\n  return response.data;\n};\n","import { NavLink } from 'react-router-dom';\n\nexport const HeaderComponent = () => {\n  return (\n    <div className=\"container\">\n      <header>\n        <nav>\n          <ul className=\"header-items\">\n            <li>\n              <NavLink to=\"/\" className=\"navlink\">\n                Home\n              </NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/movies\" className=\"navlink\">\n                Movies\n              </NavLink>\n            </li>\n          </ul>\n        </nav>\n      </header>\n    </div>\n  );\n};\n","import { NavLink, useLocation } from 'react-router-dom';\n\nexport function Trends({ movies }) {\n  const location = useLocation();\n  const trendingItem = movies.map(({ id, title, name }) => {\n    return (\n      <li key={id}>\n        <NavLink to={`/movies/${id}`} state={{ from: location }}>\n          <p>{title ? title : name}</p>\n        </NavLink>\n      </li>\n    );\n  });\n  return <ul>{trendingItem}</ul>;\n}\n","import { useState } from 'react';\n\nexport const Search = ({ onSubmit }) => {\n  const [name, setName] = useState('');\n\n  const handleInput = e => {\n    const { value } = e.target;\n    setName(value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (name.trim() === '') {\n      alert('Enter film name');\n    }\n    onSubmit(name);\n    setName('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        onChange={handleInput}\n        name=\"searchName\"\n        value={name}\n        type=\"text\"\n        autoFocus\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n","import { HeaderComponent } from 'components/header';\nimport { Search } from 'components/search';\nimport { useEffect, useState } from 'react';\nimport { Trends } from 'components/trends';\nimport { fetchFilmByName } from 'components/api';\nimport { useSearchParams } from 'react-router-dom';\nimport { Error } from 'components/Error';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('search');\n\n  useEffect(() => {\n    const fetchSearchedFilm = async () => {\n      if (!search) {\n        return;\n      }\n      try {\n        const response = await fetchFilmByName(search);\n        const result = response.results;\n        if (response.total_pages === 0) {\n          alert('No films!');\n        }\n        setMovies(result);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    fetchSearchedFilm();\n  }, [search]);\n\n  const onSubmit = name => {\n    setSearchParams({ search: name });\n  };\n\n  return (\n    <div>\n      <HeaderComponent />\n      <div className=\"movie-container\">\n        <Search onSubmit={onSubmit} />\n        <Trends movies={movies} />\n        {error && <Error />}\n      </div>\n    </div>\n  );\n};\nexport default Movies;\n"],"names":["Error","BASE_URL","KEY_API","fetchTrends","axios","response","data","fetchFilm","id","fetchFilmByName","searchName","fetchActors","fetchReviews","HeaderComponent","className","to","Trends","movies","location","useLocation","trendingItem","map","title","name","state","from","Search","onSubmit","useState","setName","e","preventDefault","trim","alert","onChange","value","target","type","autoFocus","setMovies","error","setError","useSearchParams","searchParams","setSearchParams","search","get","useEffect","fetchSearchedFilm","result","results","total_pages"],"sourceRoot":""}