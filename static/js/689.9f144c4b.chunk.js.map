{"version":3,"file":"static/js/689.9f144c4b.chunk.js","mappings":"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","sources":["components/Error.js","components/api.js","components/header.js","pages/movie-page.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["export const Error = () => {\n  return <h3>Error</h3>;\n};\n","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY_API = '79f5f6d0598b4877015b692900b7580b';\n\nexport const fetchTrends = async () => {\n  const response = await fetch(\n    `${BASE_URL}trending/all/day?api_key=${KEY_API}&language=en`\n  );\n  const trends = await response.json();\n  return trends;\n};\n\nexport const fetchFilm = async id => {\n  const response = await fetch(\n    `${BASE_URL}movie/${id}?api_key=${KEY_API}&language=en`\n  );\n  const films = await response.json();\n  return films;\n};\n\nexport const fetchFilmByName = async searchName => {\n  const response = await fetch(\n    `${BASE_URL}search/movie?api_key=${KEY_API}&language=en&page=1&include_adult=false&query=${searchName}`\n  );\n  const filmByName = await response.json();\n  return filmByName;\n};\n\nexport const fetchActors = async id => {\n  const response = await fetch(\n    `${BASE_URL}movie/${id}/credits?api_key=${KEY_API}&language=en`\n  );\n  const actors = await response.json();\n  return actors;\n};\n\nexport const fetchReviews = async id => {\n  const response = await fetch(\n    `${BASE_URL}movie/${id}/reviews?api_key=${KEY_API}&language=en&page=1`\n  );\n  const reviews = await response.json();\n  return reviews;\n};\n","import { NavLink } from 'react-router-dom';\n\nexport const HeaderComponent = () => {\n  return (\n    <div className=\"container\">\n      <header>\n        <nav>\n          <ul className=\"header-items\">\n            <li>\n              <NavLink to=\"/\" className=\"navlink\">\n                Home\n              </NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/movies\" className=\"navlink\">\n                Movies\n              </NavLink>\n            </li>\n          </ul>\n        </nav>\n      </header>\n    </div>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useParams, useLocation, Outlet, NavLink } from 'react-router-dom';\nimport { fetchFilm } from 'components/api';\nimport { Error } from 'components/Error';\nimport { HeaderComponent } from 'components/header';\n\nexport const MoviePage = () => {\n  const [state, setState] = useState(null);\n  const [error, setError] = useState('');\n  const [genresList, setGenresList] = useState([]);\n\n  const { id } = useParams();\n  const location = useLocation();\n\n  const castPage = location.pathname.includes('cast');\n  const castLink = castPage ? `/movies/${id}` : `/movies/${id}/cast`;\n  const reviewPage = location.pathname.includes('reviews');\n  const reviewLink = reviewPage ? `/movies/${id}` : `/movies/${id}/reviews`;\n\n  const imageURL = 'https://image.tmdb.org/t/p/w500';\n  useEffect(() => {\n    const movieInfo = async () => {\n      try {\n        const info = await fetchFilm(id);\n        const genres = info.genres.map(({ name, id }) => (\n          <p key={id}>{name}</p>\n        ));\n        setState(info);\n        setGenresList(genres);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    movieInfo();\n  }, [id]);\n  return (\n    <div>\n      <HeaderComponent />\n      <div>\n        <button className=\"go-back-button\">\n          <NavLink to={location.state.from}>Go back</NavLink>\n        </button>\n      </div>\n\n      {error && <Error />}\n      {state && (\n        <div>\n          <div className=\"movie-card\">\n            <img\n              className=\"movie-img\"\n              src={\n                state.poster_path\n                  ? `${imageURL}${state.poster_path}`\n                  : 'https://upload.wikimedia.org/wikipedia/commons/a/ac/No_image_available.svg'\n              }\n              alt={state.tagline}\n              width=\"200\"\n            />\n            <ul className=\"movie-info\">\n              <li>\n                <h3>\n                  \"{state.title ? state.title : state.name}\"<span> | </span>\n                  {state.release_date.substr(0, 4)}\n                </h3>\n              </li>\n              <li className=\"user-score\">\n                User Score: {Math.round(state.vote_average * 10)} %\n              </li>\n              <li>Overview: {state.overview}</li>\n              <li>\n                <span className=\"genre-list\">\n                  <span className=\"genre-title\">Genre: </span> {genresList}\n                </span>\n              </li>\n            </ul>\n          </div>\n          <ul className=\"movie-more-info\">\n            <li>\n              <NavLink to={castLink}>Actors</NavLink>\n            </li>\n            <li>\n              <NavLink to={reviewLink}>Reviews</NavLink>\n            </li>\n          </ul>\n          <Outlet />\n        </div>\n      )}\n    </div>\n  );\n};\nexport default MoviePage;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["Error","BASE_URL","KEY_API","fetchTrends","fetch","response","json","trends","fetchFilm","id","films","fetchFilmByName","searchName","filmByName","fetchActors","actors","fetchReviews","reviews","HeaderComponent","className","to","MoviePage","useState","state","setState","error","setError","genresList","setGenresList","useParams","location","useLocation","castLink","pathname","includes","reviewLink","useEffect","movieInfo","info","genres","map","name","from","src","poster_path","alt","tagline","width","title","release_date","substr","Math","round","vote_average","overview","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}